@using TimeloggerCore.Common.Utility.Constants;
@model UserAuthenticationInfo
@{
    ViewData["Title"] = "Two-factor authentication";
    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);
}

<h4>@ViewData["Title"]</h4>
<p class="text-success">@ViewBag.StatusMessage</p>
@if (Model.TwoFactorEnabled)
{
    if (Model.RecoveryCodesLeft == 0)
    {
        <div class="alert alert-danger">
            <strong>You have no recovery codes left.</strong>
            <p>You must <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
        </div>
    }
    else if (Model.RecoveryCodesLeft == 1)
    {
        <div class="alert alert-danger">
            <strong>You have 1 recovery code left.</strong>
            <p>You can <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }
    else if (Model.RecoveryCodesLeft <= 3)
    {
        <div class="alert alert-warning">
            <strong>You have @Model.RecoveryCodesLeft recovery codes left.</strong>
            <p>You should <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }

    <a asp-action="DisableTwoFactorAuthenticationWarning" class="btn btn-default">Disable two-factor authentication</a>
    <a asp-action="GenerateRecoveryCodesWarning" class="btn btn-default">Reset recovery codes</a>
}

<h5>Authenticators</h5>
@*@if (!Model.HasAuthenticator)*@
@if (!Model.TwoFactorEnabled)
{
    <a asp-action="EnableAuthenticator" class="btn btn-default">Add authenticator app</a>
    <a asp-action="EnableEmailOtp" class="btn btn-default">Add email otp</a>
}
else
{
    if (Model.TwoFactorType.Equals(TwoFactorTypes.Authenticator))
    {
        <a asp-action="EnableAuthenticator" class="btn btn-default">Configure authenticator app</a>
        <a asp-action="ResetAuthenticatorWarning" class="btn btn-default">Reset authenticator key</a>
    }
    else if (Model.TwoFactorType.Equals(TwoFactorTypes.Email))
    {

    }
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
